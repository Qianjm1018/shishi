{"name": "test_product_category_create[sort字段异常测试-非数字]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 13 column 11 (char 268)", "trace": "token = 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImNyZWF0ZWQiOjE1NjQxMzI5MzQ2OTYsImV4cCI6MTU2NDczNzczNH0.5ZX35vyScVQh6elWXmtpDbS_DeszS_viXZvi_BAtTY3KLgiUk2J6bJx5boWelVOIL64Vg9x5vJfbZpJynK775w'\nuri = '/productCategory/create'\ndatas = '{\\n  \"description\": \"a\",\\n  \"icon\": \"http://img5.imgtn.bdimg.com/it/u=3300305952,1328708913&fm=26&gp=0.jpg\",\\n  \"keyw...arentId\": 0,\\n  \"productAttributeIdList\": [\\n    1\\n  ],\\n  \"productUnit\": \"件\",\\n  \"showStatus\": 0,\\n  \"sort\": 决定定时\\n}'\ncode = 500.0\n\n    @pytest.mark.parametrize('uri,datas,code',data[1],ids=data[0])\n    @allure.feature('添加商品分类')\n    def test_product_category_create(token,uri,datas,code,):\n        # config/conf.py里面配置GY_API_URL,模板快捷键demo_conf_api\n        url = conf.GY_API_URL + uri\n>       req = json.loads(datas)\n\ntest_case\\product_category\\test_product_category_add.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\software\\Python37-32\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nC:\\software\\Python37-32\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x03079FF0>\ns = '{\\n  \"description\": \"a\",\\n  \"icon\": \"http://img5.imgtn.bdimg.com/it/u=3300305952,1328708913&fm=26&gp=0.jpg\",\\n  \"keyw...arentId\": 0,\\n  \"productAttributeIdList\": [\\n    1\\n  ],\\n  \"productUnit\": \"件\",\\n  \"showStatus\": 0,\\n  \"sort\": 决定定时\\n}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 13 column 11 (char 268)\n\nC:\\software\\Python37-32\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "uri", "value": "'/productCategory/create'"}, {"name": "datas", "value": "'{\n  \"description\": \"a\",\n  \"icon\": \"http://img5.imgtn.bdimg.com/it/u=3300305952,1328708913&fm=26&gp=0.jpg\",\n  \"keywords\": \"s\",\n  \"name\": \"车\",\n  \"navStatus\": 0,\n  \"parentId\": 0,\n  \"productAttributeIdList\": [\n    1\n  ],\n  \"productUnit\": \"件\",\n  \"showStatus\": 0,\n  \"sort\": 决定定时\n}'"}, {"name": "code", "value": "500.0"}], "start": 1564132932088, "stop": 1564132932088, "uuid": "bca144b7-ae86-4bd8-8286-93c0b46a260d", "historyId": "0d0d29a78b65b842a59df388bdacff36", "fullName": "test_case.product_category.test_product_category_add#test_product_category_create[sort字段异常测试-非数字]", "labels": [{"name": "feature", "value": "添加商品分类"}, {"name": "parentSuite", "value": "test_case.product_category"}, {"name": "suite", "value": "test_product_category_add"}, {"name": "subSuite"}, {"name": "host", "value": "SKY-20190321QIW"}, {"name": "thread", "value": "4568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.product_category.test_product_category_add"}]}