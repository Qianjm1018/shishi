{
  "uid" : "1ecf682e964acff4",
  "name" : "test_product_category_create[sort字段异常测试-非数字]",
  "fullName" : "test_case.product_category.test_product_category_add#test_product_category_create[sort字段异常测试-非数字]",
  "historyId" : "0d0d29a78b65b842a59df388bdacff36",
  "time" : {
    "start" : 1564132599884,
    "stop" : 1564132599884,
    "duration" : 0
  },
  "status" : "broken",
  "statusDetails" : {
    "message" : "json.decoder.JSONDecodeError: Expecting value: line 13 column 11 (char 268)",
    "trace" : "token = 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImNyZWF0ZWQiOjE1NjQxMzI2MDIzODIsImV4cCI6MTU2NDczNzQwMn0.qWTgduCH4EUrKFc0ns6lKNw4QO9IrLreLTX7gtpbQS_YMag88VGFi45ClWbj5hOcGoouy_-wY8CvyAeLZS7XUQ'\nuri = '/productCategory/create'\ndatas = '{\\n  \"description\": \"a\",\\n  \"icon\": \"http://img5.imgtn.bdimg.com/it/u=3300305952,1328708913&fm=26&gp=0.jpg\",\\n  \"keyw...arentId\": 0,\\n  \"productAttributeIdList\": [\\n    1\\n  ],\\n  \"productUnit\": \"件\",\\n  \"showStatus\": 0,\\n  \"sort\": 决定定时\\n}'\ncode = 500.0\n\n    @pytest.mark.parametrize('uri,datas,code',data[1],ids=data[0])\n    def test_product_category_create(token,uri,datas,code,):\n        # config/conf.py里面配置GY_API_URL,模板快捷键demo_conf_api\n        url = conf.GY_API_URL + uri\n>       req = json.loads(datas)\n\ntest_case\\product_category\\test_product_category_add.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\software\\Python37-32\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nC:\\software\\Python37-32\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x03036070>\ns = '{\\n  \"description\": \"a\",\\n  \"icon\": \"http://img5.imgtn.bdimg.com/it/u=3300305952,1328708913&fm=26&gp=0.jpg\",\\n  \"keyw...arentId\": 0,\\n  \"productAttributeIdList\": [\\n    1\\n  ],\\n  \"productUnit\": \"件\",\\n  \"showStatus\": 0,\\n  \"sort\": 决定定时\\n}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 13 column 11 (char 268)\n\nC:\\software\\Python37-32\\lib\\json\\decoder.py:355: JSONDecodeError",
    "flaky" : false
  },
  "beforeStages" : [ {
    "name" : "token",
    "time" : {
      "start" : 1564132599161,
      "stop" : 1564132599354,
      "duration" : 193
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2699708f9d2b4ffb",
      "name" : "请求",
      "source" : "2699708f9d2b4ffb.txt",
      "type" : "text/plain",
      "size" : 274
    }, {
      "uid" : "7365f14e5e5ddf67",
      "name" : "响应",
      "source" : "7365f14e5e5ddf67.txt",
      "type" : "text/plain",
      "size" : 629
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case.product_category"
  }, {
    "name" : "suite",
    "value" : "test_product_category_add"
  }, {
    "name" : "subSuite"
  }, {
    "name" : "host",
    "value" : "SKY-20190321QIW"
  }, {
    "name" : "thread",
    "value" : "7936-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.product_category.test_product_category_add"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "code",
    "value" : "500.0"
  }, {
    "name" : "datas",
    "value" : "'{\n  \"description\": \"a\",\n  \"icon\": \"http://img5.imgtn.bdimg.com/it/u=3300305952,1328708913&fm=26&gp=0.jpg\",\n  \"keywords\": \"s\",\n  \"name\": \"车\",\n  \"navStatus\": 0,\n  \"parentId\": 0,\n  \"productAttributeIdList\": [\n    1\n  ],\n  \"productUnit\": \"件\",\n  \"showStatus\": 0,\n  \"sort\": 决定定时\n}'"
  }, {
    "name" : "uri",
    "value" : "'/productCategory/create'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "extra" : {
    "tags" : [ ]
  },
  "source" : "1ecf682e964acff4.json",
  "statusDetailsSafe" : {
    "message" : "json.decoder.JSONDecodeError: Expecting value: line 13 column 11 (char 268)",
    "trace" : "token = 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImNyZWF0ZWQiOjE1NjQxMzI2MDIzODIsImV4cCI6MTU2NDczNzQwMn0.qWTgduCH4EUrKFc0ns6lKNw4QO9IrLreLTX7gtpbQS_YMag88VGFi45ClWbj5hOcGoouy_-wY8CvyAeLZS7XUQ'\nuri = '/productCategory/create'\ndatas = '{\\n  \"description\": \"a\",\\n  \"icon\": \"http://img5.imgtn.bdimg.com/it/u=3300305952,1328708913&fm=26&gp=0.jpg\",\\n  \"keyw...arentId\": 0,\\n  \"productAttributeIdList\": [\\n    1\\n  ],\\n  \"productUnit\": \"件\",\\n  \"showStatus\": 0,\\n  \"sort\": 决定定时\\n}'\ncode = 500.0\n\n    @pytest.mark.parametrize('uri,datas,code',data[1],ids=data[0])\n    def test_product_category_create(token,uri,datas,code,):\n        # config/conf.py里面配置GY_API_URL,模板快捷键demo_conf_api\n        url = conf.GY_API_URL + uri\n>       req = json.loads(datas)\n\ntest_case\\product_category\\test_product_category_add.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\software\\Python37-32\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nC:\\software\\Python37-32\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x03036070>\ns = '{\\n  \"description\": \"a\",\\n  \"icon\": \"http://img5.imgtn.bdimg.com/it/u=3300305952,1328708913&fm=26&gp=0.jpg\",\\n  \"keyw...arentId\": 0,\\n  \"productAttributeIdList\": [\\n    1\\n  ],\\n  \"productUnit\": \"件\",\\n  \"showStatus\": 0,\\n  \"sort\": 决定定时\\n}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 13 column 11 (char 268)\n\nC:\\software\\Python37-32\\lib\\json\\decoder.py:355: JSONDecodeError",
    "flaky" : false
  },
  "statusMessage" : {
    "present" : true
  },
  "parameterValues" : [ "500.0", "'{\n  \"description\": \"a\",\n  \"icon\": \"http://img5.imgtn.bdimg.com/it/u=3300305952,1328708913&fm=26&gp=0.jpg\",\n  \"keywords\": \"s\",\n  \"name\": \"车\",\n  \"navStatus\": 0,\n  \"parentId\": 0,\n  \"productAttributeIdList\": [\n    1\n  ],\n  \"productUnit\": \"件\",\n  \"showStatus\": 0,\n  \"sort\": 决定定时\n}'", "'/productCategory/create'" ]
}